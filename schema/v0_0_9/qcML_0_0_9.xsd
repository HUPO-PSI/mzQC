<!-- qcML version 0.0.9
Distributed under the Creative Commons license http://creativecommons.org/licenses/by/2.0/.
-->
<xsd:schema xmlns="http://www.prime-xs.eu/ms/qcml" xmlns:xsd="http://www.w3.org/2001/XMLSchema"
	targetNamespace="http://www.prime-xs.eu/ms/qcml" elementFormDefault="qualified" version="0.0.9">
	<xsd:element name="qcML" type="qcMLType">
		<xsd:annotation>
			<xsd:documentation>The qcML file XML root element containing several QualityAssessments to runs and an optional QualityAssessment to the whole set</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:complexType name="qcMLType">
		<xsd:annotation>
			<xsd:documentation>The type of the root element</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="runQuality" maxOccurs="unbounded" type="RunQualityAssessmentType">
				<xsd:annotation>
					<xsd:documentation>Contains a QualityAssessment to a run as sequence of qualityParameters and attachments</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="setQuality" minOccurs="0" maxOccurs="unbounded"
				type="SetQualityAssessmentType">
				<xsd:annotation>
					<xsd:documentation>Contains a QualityAssassment  to a set of runs referenced from this file as a sequence of qualityParameters or attachments</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="cvList" type="CVListType">
				<xsd:annotation>
					<xsd:documentation>The list of source CV referenced in this file</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element form="qualified" minOccurs="0" name="embeddedStylesheetList"
				nillable="true">
				<xsd:annotation>
					<xsd:documentation>Element to put stylesheets (or any other elements from ns:http://www.w3.org/1999/XSL/Transform) in here so that more rigid validators will accept that while maintaining the files transformability (to display) by the embedded stylesheet.</xsd:documentation>
				</xsd:annotation>
				<xsd:complexType>
					<xsd:sequence>
						<xsd:any namespace="http://www.w3.org/1999/XSL/Transform"
							processContents="lax" minOccurs="1" maxOccurs="unbounded"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
		</xsd:sequence>
		<xsd:attribute name="version" use="required">
			<xsd:annotation>
				<xsd:documentation>Version number of qcML document. Pattern is \d+\.\d+\.\d+</xsd:documentation>
			</xsd:annotation>
			<xsd:simpleType>
				<xsd:restriction base="xsd:string">
					<xsd:pattern value="\d+\.\d+\.\d+"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
	</xsd:complexType>
	<xsd:complexType name="QualityAssessmentType" abstract="true">
		<xsd:annotation>
			<xsd:documentation>The abstract base type for qualityParameter and attachment container</xsd:documentation>
		</xsd:annotation>
		<xsd:choice maxOccurs="unbounded">
			<xsd:sequence>
				<xsd:element name="metaDataParameter" minOccurs="0" maxOccurs="unbounded"
					type="MetaDataType">
					<xsd:annotation>
						<xsd:documentation>Meta data about the quality parameters, e.g. description of tool(s) the quality parameters were created with, version of the tool(s), creation data, source files the quality parameters were extracted from, etc.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
			</xsd:sequence>
			<xsd:sequence>
				<xsd:element name="qualityParameter" type="QualityParameterType"
					maxOccurs="unbounded">
					<xsd:annotation>
						<xsd:documentation>Describes the @value of a certain quality parameter by reference to a CVType (and UnitCvType)</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
			</xsd:sequence>
		</xsd:choice>
	</xsd:complexType>
	<xsd:complexType name="RunQualityAssessmentType">
		<xsd:annotation>
			<xsd:documentation>The derived Type for QualityParameter container of a run</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="QualityAssessmentType">
				<xsd:attribute name="ID" type="xsd:ID" use="required">
					<xsd:annotation>
						<xsd:documentation>A file unique identifier for this runQuality element</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="SetQualityAssessmentType">
		<xsd:annotation>
			<xsd:documentation>The derived Type for QualityParameter  container of a Set</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="QualityAssessmentType">
				<xsd:attribute name="ID" type="xsd:ID" use="required">
					<xsd:annotation>
						<xsd:documentation>A file unique identifier for this set element</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="AbstractParamType" abstract="true">
		<xsd:annotation>
			<xsd:documentation>Abstract entity allowing either cvParam or userParam to be referenced in other schemas. </xsd:documentation>
		</xsd:annotation>
		<xsd:attribute name="name" type="xsd:string" use="required">
			<xsd:annotation>
				<xsd:documentation>The name of the cvTerm describing the parameter</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="description" type="xsd:string">
			<xsd:annotation>
				<xsd:documentation>Description of the parameter, containing information to allow the user interpreting the QC value.</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="value" type="xsd:string">
			<xsd:annotation>
				<xsd:documentation>The user-entered value of the parameter, e.g. ppm value of accuracy or the file name</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="unitAccession" type="xsd:string">
			<xsd:annotation>
				<xsd:documentation>The accession number identifying the unit within the OBO foundry Unit CV</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="unitName" type="xsd:string">
			<xsd:annotation>
				<xsd:documentation>The name of the unit corresponding to the value</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="unitCvRef" type="xsd:IDREF">
			<xsd:annotation>
				<xsd:documentation>If a unit term is used, this attribute must refer to the corresponding CV 'id' attribute defined in the cvList in this file</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
	</xsd:complexType>
	<xsd:complexType name="MetaDataType">
		<xsd:annotation>
			<xsd:documentation>A meta data annotation CV element.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="CVParamType">
				<xsd:attribute name="ID" type="xsd:ID" use="required">
					<xsd:annotation>
						<xsd:documentation>A file unique identifier for this meta data parameter</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="CVParamType">
		<xsd:annotation>
			<xsd:documentation>A single entry from an ontology or a controlled vocabulary.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="AbstractParamType">
				<xsd:attribute name="cvRef" type="xsd:IDREF" use="required">
					<xsd:annotation>
						<xsd:documentation>This attribute must refer to the corresponding CV 'id' attribute defined in the cvList in this file</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="accession" type="xsd:string" use="required">
					<xsd:annotation>
						<xsd:documentation>The accession number identifying the used cvTterm in the source CV</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="QualityParameterType">
		<xsd:annotation>
			<xsd:documentation>A quality parameter contains a value and a cv, as well as a optional threshold element</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="CVParamType">
				<xsd:sequence minOccurs="0">
					<xsd:element name="threshold" maxOccurs="unbounded" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Can be used (suggested in an separate file) to define thresholds to certain qualityParameters</xsd:documentation>
						</xsd:annotation>
						<xsd:complexType>
							<xsd:complexContent>
								<xsd:extension base="CVParamType">
									<xsd:attribute name="ID" type="xsd:ID" use="optional">
										<xsd:annotation>
											<xsd:documentation>A file unique identifier for this attachment element</xsd:documentation>
										</xsd:annotation>
									</xsd:attribute>
									<xsd:attribute name="thresholdFilename" type="xsd:string"/>
								</xsd:extension>
							</xsd:complexContent>
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="content" type="xsd:anyType" minOccurs="0"/>
				</xsd:sequence>
				<xsd:attribute name="ID" type="xsd:ID" use="required">
					<xsd:annotation>
						<xsd:documentation>A file unique identifier for this  qualityParameter element</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="flag" type="xsd:boolean">
					<xsd:annotation>
						<xsd:documentation>Indicates if this qualityParameter has passed a given threshold</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="TableType">
		<xsd:sequence>
			<xsd:element name="tableColumnTypes" type="listOfStrings">
				<xsd:annotation>
					<xsd:documentation>Containes either the names or accessions of cvTerms following in that order in each tableRowValues (space separated) </xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="tableRowValues" type="listOfStrings" maxOccurs="unbounded">
				<xsd:annotation>
					<xsd:documentation>Containes the values in the order given in tableColumnTypes (space separated)</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="CVListType">
		<xsd:annotation>
			<xsd:documentation>The list of controlled vocabularies used in the file.</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="cv" type="CVType" maxOccurs="unbounded">
				<xsd:annotation>
					<xsd:documentation>these are describing the controlled vocabularies containing the used parameters</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:simpleType name="listOfStrings">
		<xsd:list itemType="xsd:string"/>
	</xsd:simpleType>
	<xsd:simpleType name="listOfDoubles">
		<xsd:list itemType="xsd:double"/>
	</xsd:simpleType>
	<xsd:simpleType name="listOfDoublesOrNulls">
		<xsd:list itemType="doubleOrNullType"/>
	</xsd:simpleType>
	<xsd:simpleType name="doubleOrNullType">
		<xsd:union memberTypes="xsd:double">
			<xsd:simpleType>
				<xsd:restriction base="xsd:token">
					<xsd:enumeration value="null"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:union>
	</xsd:simpleType>
	<xsd:simpleType name="versionRegex">
		<xsd:restriction base="xsd:string">
			<xsd:pattern value="(1\.1\.\d+)"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:complexType name="CVType">
		<xsd:annotation>
			<xsd:documentation>A source controlled vocabulary from which cvParams will be obtained.</xsd:documentation>
		</xsd:annotation>
		<xsd:attribute name="fullName" type="xsd:string" use="required">
			<xsd:annotation>
				<xsd:documentation>The full name of the CV.</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="version" type="xsd:string">
			<xsd:annotation>
				<xsd:documentation>The version of the CV.</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="required">
			<xsd:annotation>
				<xsd:documentation>The URI of the source CV.</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="ID" type="xsd:ID" use="required">
			<xsd:annotation>
				<xsd:documentation>The unique identifier of this cv within the document to be referenced by cvParam elements. </xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
	</xsd:complexType>
</xsd:schema>
