<!-- Mit XMLSpy v2007 sp1 bearbeitet (http://www.altova.com) von Oliver Kohlbacher (Universität Tübingen) -->
<!-- Mit XMLSpy v2007 sp1 bearbeitet (http://www.altova.com) von Oliver Kohlbacher (Universität Tübingen) -->
<!-- edited with XMLSpy v2007 sp2 (http://www.altova.com) by Oliver Kohlbacher (Universität Tübingen) -->
<!-- mzQualML version 0.0.1s
Distributed under the Creative Commons license http://creativecommons.org/licenses/by/2.0/.
-->
<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" version="1.1.0">
	<xsd:element name="MzQualityML" type="MzQualityMLType">
		<xsd:annotation>
			<xsd:documentation>The Quality file  XML root element containing several QualityAssessments to runs and an optional QualityAssessment to the whole set</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:complexType name="SourceFileType">
		<xsd:annotation>
			<xsd:documentation>A file from which this MzQuantML instance was created, including potentially MzQuantML files for earlier stages in a workflow.</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="ExternalFormatDocumentation" type="xsd:anyURI" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>A URI to access documentation and tools to interpret the external format of the ExternalData instance. For example, XML Schema or static libraries (APIs) to access binary formats.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="cvParam" type="CVParamType">
				<xsd:annotation>
					<xsd:documentation>cvParam capturing file formats</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
		<xsd:attribute name="id" type="xsd:ID" use="required">
			<xsd:annotation>
				<xsd:documentation>An identifier is an unambiguous string that is unique within the scope (i.e. a document, a set of related documents, or a repository) of its use.</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="name" type="xsd:string">
			<xsd:annotation>
				<xsd:documentation>The potentially ambiguous common identifier, such as a human-readable name for the instance. </xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="location" type="xsd:anyURI" use="required">
			<xsd:annotation>
				<xsd:documentation>The location of the data file.</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
	</xsd:complexType>
	<xsd:complexType name="MzQualityMLType">
		<xsd:annotation>
			<xsd:documentation>The type of the root element</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="RunQuality" type="RunQualityAssessmentType" maxOccurs="unbounded"/>
			<xsd:element name="SetQuality" type="SetQualityAssessmentType" minOccurs="0"/>
			<xsd:element name="QCMeasureDoc">
				<xsd:annotation>
					<xsd:documentation>Freeform text that describes the contents in a flexible way in the way a README  would. Extension of xsd:string</xsd:documentation>
				</xsd:annotation>
				<xsd:complexType>
					<xsd:simpleContent>
						<xsd:extension base="xsd:string">
							<xsd:attribute name="cvRef">
								<xsd:annotation>
									<xsd:documentation>reference for a interactive Viewer to display the right params w/o redundancy</xsd:documentation>
								</xsd:annotation>
							</xsd:attribute>
						</xsd:extension>
					</xsd:simpleContent>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="InputFiles" type="SourceFileType"/>
			<xsd:element name="CvList" type="CVListType">
				<xsd:annotation>
					<xsd:documentation>the list of cvParams referenced by the QualityParameters</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="QualityAssessmentType" abstract="true">
		<xsd:annotation>
			<xsd:documentation>The abstract base Type for QualityParameter  container</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:sequence>
				<xsd:element name="QualityParameter" type="CVParamType" maxOccurs="unbounded">
					<xsd:annotation>
						<xsd:documentation>the value modelling a QualityParameter is a pair of keyref to a cvType and value to the actual value</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
			</xsd:sequence>
			<xsd:sequence>
				<xsd:element name="Attachment" type="AttachmentType" maxOccurs="unbounded">
					<xsd:annotation>
						<xsd:documentation>the element for the binary data of a QualityParameter reference with the MIME type as additional cvParam</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
			</xsd:sequence>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="RunQualityAssessmentType">
		<xsd:annotation>
			<xsd:documentation>The derived Type for QualityParameter  container of a run</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="QualityAssessmentType"/>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="SetQualityAssessmentType">
		<xsd:annotation>
			<xsd:documentation>The derived Type for QualityParameter  container of a Set</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="QualityAssessmentType"/>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:simpleType name="versionRegex">
		<xsd:restriction base="xsd:string">
			<xsd:pattern value="(1\.1\.\d+)"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:complexType name="AbstractParamType" abstract="true">
		<xsd:annotation>
			<xsd:documentation>Abstract entity allowing either cvParam or userParam to be referenced in other schemas. </xsd:documentation>
		</xsd:annotation>
		<xsd:attribute name="name" type="xsd:string" use="required">
			<xsd:annotation>
				<xsd:documentation>The name of the parameter.</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="value" type="xsd:string">
			<xsd:annotation>
				<xsd:documentation>The user-entered value of the parameter.</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="unitAccession" type="xsd:string">
			<xsd:annotation>
				<xsd:documentation>An accession number identifying the unit within the OBO foundry Unit CV. </xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="unitName" type="xsd:string">
			<xsd:annotation>
				<xsd:documentation>The name of the unit.</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="unitCvRef" type="xsd:string">
			<xsd:annotation>
				<xsd:documentation>If a unit term is referenced, this attribute must refer to the CV 'id' attribute defined in the cvList in this file. </xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
	</xsd:complexType>
	<xsd:complexType name="AttachmentType">
		<xsd:annotation>
			<xsd:documentation>A single attachment containing binary data and a cvParam containing the MIME type of the binary data</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="AbstractParamType">
				<xsd:sequence>
					<xsd:element name="binary" type="xsd:base64Binary"/>
				</xsd:sequence>
				<xsd:attribute name="cvRef" type="xsd:string" use="required">
					<xsd:annotation>
						<xsd:documentation>A reference to the cv element from which this term originates. </xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="accession" type="xsd:string" use="required">
					<xsd:annotation>
						<xsd:documentation>The accession or ID number of this CV term in the source CV. </xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="CvParamType">
		<xsd:annotation>
			<xsd:documentation>A single entry from an ontology or a controlled
vocabulary.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="AbstractParamType">
				<xsd:attribute name="cvRef" type="xsd:string" use="required">
					<xsd:annotation>
						<xsd:documentation>A reference to the cv element from which this term originates. </xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="accession" type="xsd:string" use="required">
					<xsd:annotation>
						<xsd:documentation>The accession or ID number of this CV term in the source CV. </xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="CvListType">
		<xsd:annotation>
			<xsd:documentation>The list of controlled vocabularies used in the file.</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="cv" type="cvType" maxOccurs="unbounded">
				<xsd:annotation>
					<xsd:documentation>these are describing the QualityParameters with a given semantic. (FWHM, TIC, TICsetlimit, ..., jpeg, ...) </xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="CvType">
		<xsd:annotation>
			<xsd:documentation>A source controlled vocabulary from which cvParams will be obtained.</xsd:documentation>
		</xsd:annotation>
		<xsd:attribute name="fullName" type="xsd:string" use="required">
			<xsd:annotation>
				<xsd:documentation>The full name of the CV.</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="version" type="xsd:string">
			<xsd:annotation>
				<xsd:documentation>The version of the CV.</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="required">
			<xsd:annotation>
				<xsd:documentation>The URI of the source CV.</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="id" type="xsd:string" use="required">
			<xsd:annotation>
				<xsd:documentation>The unique identifier of this cv within the document to be referenced by cvParam elements. </xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
	</xsd:complexType>
</xsd:schema>
