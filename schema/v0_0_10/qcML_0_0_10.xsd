<!-- qcML version 0.0.9
Distributed under the Creative Commons license http://creativecommons.org/licenses/by/2.0/.
-->
<xsd:schema xmlns="http://www.psidev.info/qc/qcml" xmlns:xsd="http://www.w3.org/2001/XMLSchema"
	targetNamespace="http://www.psidev.info/qc/qcml" elementFormDefault="qualified" version="0.0.9">
	<xsd:element name="qcML" type="qcMLType">
		<xsd:annotation>
			<xsd:documentation>The qcML file XML root element containing several QualityAssessments to runs and an optional QualityAssessment to the whole set

Changed namespace and renamed metric elements and added more input file provenance.</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:complexType name="qcMLType">
		<xsd:annotation>
			<xsd:documentation>The type of the root element</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="runQuality" maxOccurs="unbounded" type="RunQualityType">
				<xsd:annotation>
					<xsd:documentation>Contains a QualityAssessment to a run as sequence of qualityParameters and attachments</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="setQuality" minOccurs="0" maxOccurs="unbounded" type="SetQualityType">
				<xsd:annotation>
					<xsd:documentation>Contains a QualityAssassment  to a set of runs referenced from this file as a sequence of qualityParameters or attachments</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="cvList" type="CVListType">
				<xsd:annotation>
					<xsd:documentation>The list of source CV referenced in this file</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element form="qualified" minOccurs="0" name="embeddedStylesheetList"
				nillable="true">
				<xsd:annotation>
					<xsd:documentation>Element to put stylesheets (or any other elements from ns:http://www.w3.org/1999/XSL/Transform) in here so that more rigid validators will accept that while maintaining the files transformability (to display) by the embedded stylesheet.</xsd:documentation>
				</xsd:annotation>
				<xsd:complexType>
					<xsd:sequence>
						<xsd:any namespace="http://www.w3.org/1999/XSL/Transform"
							processContents="lax" minOccurs="1" maxOccurs="unbounded"/>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
		</xsd:sequence>
		<xsd:attribute name="version" use="required">
			<xsd:annotation>
				<xsd:documentation>Version number of qcML document. Pattern is \d+\.\d+\.\d+</xsd:documentation>
			</xsd:annotation>
			<xsd:simpleType>
				<xsd:restriction base="xsd:string">
					<xsd:pattern value="\d+\.\d+\.\d+"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
	</xsd:complexType>
	<xsd:complexType name="IdentifiableType" abstract="true">
		<xsd:annotation>
			<xsd:documentation>Other classes in the model can be specified as sub-classes, inheriting from Identifiable. Identifiable gives classes a unique identifier within the scope and a name that need not be unique. </xsd:documentation>
		</xsd:annotation>
		<xsd:attribute name="id" type="xsd:ID" use="required">
			<xsd:annotation>
				<xsd:documentation>An identifier is an unambiguous string that is unique within the scope (i.e. a document, a set of related documents, or a repository) of its use.</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="name" type="xsd:string">
			<xsd:annotation>
				<xsd:documentation>The potentially ambiguous common identifier, such as a human-readable name for the instance. </xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
	</xsd:complexType>
	<xsd:complexType name="RunQualityType">
		<xsd:annotation>
			<xsd:documentation>The derived Type for QualityParameter container of a run</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="QualityAssessmentType">
				<xsd:attribute name="ID" type="xsd:ID" use="required">
					<xsd:annotation>
						<xsd:documentation>A file unique identifier for this runQuality element</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="SetQualityType">
		<xsd:annotation>
			<xsd:documentation>The derived Type for QualityParameter  container of a Set</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="QualityAssessmentType">
				<xsd:attribute name="ID" type="xsd:ID" use="required">
					<xsd:annotation>
						<xsd:documentation>A file unique identifier for this set element</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="AbstractParamType" abstract="true">
		<xsd:annotation>
			<xsd:documentation>Abstract entity allowing either cvParam or userParam to be referenced in other schemas. </xsd:documentation>
		</xsd:annotation>
		<xsd:attribute name="name" type="xsd:string" use="required">
			<xsd:annotation>
				<xsd:documentation>The name of the cvTerm describing the parameter</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="description" type="xsd:string">
			<xsd:annotation>
				<xsd:documentation>Description of the parameter, containing information to allow the user interpreting the QC value.</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="value" type="xsd:string">
			<xsd:annotation>
				<xsd:documentation>The user-entered value of the parameter, e.g. ppm value of accuracy or the file name</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="unitAccession" type="xsd:string">
			<xsd:annotation>
				<xsd:documentation>The accession number identifying the unit within the OBO foundry Unit CV</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="unitName" type="xsd:string">
			<xsd:annotation>
				<xsd:documentation>The name of the unit corresponding to the value</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="unitCvRef" type="xsd:IDREF">
			<xsd:annotation>
				<xsd:documentation>If a unit term is used, this attribute must refer to the corresponding CV 'id' attribute defined in the cvList in this file</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
	</xsd:complexType>
	<xsd:complexType name="MetaDataType">
		<xsd:annotation>
			<xsd:documentation>A meta data annotation CV element.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="CVParamType">
				<xsd:attribute name="ID" type="xsd:ID" use="required">
					<xsd:annotation>
						<xsd:documentation>A file unique identifier for this meta data parameter</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="CVParamType">
		<xsd:annotation>
			<xsd:documentation>A single entry from an ontology or a controlled vocabulary.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="AbstractParamType">
				<xsd:attribute name="cvRef" type="xsd:IDREF" use="required">
					<xsd:annotation>
						<xsd:documentation>This attribute must refer to the corresponding CV 'id' attribute defined in the cvList in this file</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
				<xsd:attribute name="accession" type="xsd:string" use="required">
					<xsd:annotation>
						<xsd:documentation>The accession number identifying the used cvTterm in the source CV</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="QualityMetricType">
		<xsd:annotation>
			<xsd:documentation>A quality parameter contains a value and a cv, as well as a optional threshold element</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="CVParamType">
				<xsd:sequence minOccurs="0">
					<xsd:element name="content">
						<xsd:complexType>
							<xsd:complexContent>
								<xsd:extension base="xsd:anyType">
									<xsd:attribute name="ID" type="xsd:ID" use="required">
										<xsd:annotation>
											<xsd:documentation>A file unique identifier for this  qualityParameter element</xsd:documentation>
										</xsd:annotation>
									</xsd:attribute>
									<xsd:attribute name="name" type="xsd:string" use="required">
										<xsd:annotation>
											<xsd:documentation>The name of the cvTerm describing the parameter</xsd:documentation>
										</xsd:annotation>
									</xsd:attribute>
									<xsd:attribute name="description" type="xsd:string">
										<xsd:annotation>
											<xsd:documentation>Description of the parameter, containing information to allow the user interpreting the QC value.</xsd:documentation>
										</xsd:annotation>
									</xsd:attribute>
									<xsd:attribute name="value" type="xsd:string">
										<xsd:annotation>
											<xsd:documentation>The user-entered value of the parameter, e.g. ppm value of accuracy or the file name</xsd:documentation>
										</xsd:annotation>
									</xsd:attribute>
									<xsd:attribute name="unitAccession" type="xsd:string">
										<xsd:annotation>
											<xsd:documentation>The accession number identifying the unit within the OBO foundry Unit CV</xsd:documentation>
										</xsd:annotation>
									</xsd:attribute>
									<xsd:attribute name="unitName" type="xsd:string">
										<xsd:annotation>
											<xsd:documentation>The name of the unit corresponding to the value</xsd:documentation>
										</xsd:annotation>
									</xsd:attribute>
									<xsd:attribute name="unitCvRef" type="xsd:IDREF">
										<xsd:annotation>
											<xsd:documentation>If a unit term is used, this attribute must refer to the corresponding CV 'id' attribute defined in the cvList in this file</xsd:documentation>
										</xsd:annotation>
									</xsd:attribute>
									<xsd:attribute name="cvRef" type="xsd:IDREF" use="required">
										<xsd:annotation>
											<xsd:documentation>This attribute must refer to the corresponding CV 'id' attribute defined in the cvList in this file</xsd:documentation>
										</xsd:annotation>
									</xsd:attribute>
									<xsd:attribute name="accession" type="xsd:string" use="required">
										<xsd:annotation>
											<xsd:documentation>The accession number identifying the used cvTterm in the source CV</xsd:documentation>
										</xsd:annotation>
									</xsd:attribute>
								</xsd:extension>
							</xsd:complexContent>
						</xsd:complexType>
					</xsd:element>
				</xsd:sequence>
				<xsd:attribute name="ID" type="xsd:ID" use="required">
					<xsd:annotation>
						<xsd:documentation>A file unique identifier for this  qualityParameter element</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="ExternalDataType">
		<xsd:annotation>
			<xsd:documentation>Data external to the XML instance document. The location of the data file is given in the location attribute. </xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="IdentifiableType">
				<xsd:sequence>
					<xsd:element name="ExternalFormatDocumentation" type="xsd:anyURI" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>A URI to access documentation and tools to interpret the external format of the ExternalData instance. For example, XML Schema or static libraries (APIs) to access binary formats.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="FileFormat" type="FileFormatType" minOccurs="0"/>
				</xsd:sequence>
				<xsd:attribute name="location" type="xsd:anyURI" use="required">
					<xsd:annotation>
						<xsd:documentation>The location of the data file.</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="RawFileType">
		<xsd:annotation>
			<xsd:documentation>A raw mass spectrometry output file that has been analysed e.g. in mzML format. The same raw file can be referenced in multiple assays, for example if it contains multiple samples differentially labelled or tagged. Note, the name raw file does not necessarily imply that the file has not been processed, since in some quant methods, processed peak list formats such as MGF or DTA can be used, which could be referenced here.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="ExternalDataType">
				<xsd:group ref="ParamGroup" minOccurs="0" maxOccurs="unbounded">
					<xsd:annotation>
						<xsd:documentation>Additional parameters about the raw file.</xsd:documentation>
					</xsd:annotation>
				</xsd:group>
				<xsd:attribute name="methodFile_ref" type="xsd:IDREF" use="optional">
					<xsd:annotation>
						<xsd:documentation>An optional reference to a methods file used in association with a raw file, for example a TraML file used for SRM analysis.</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="QualityAssessmentType" abstract="true">
		<xsd:annotation>
			<xsd:documentation>The abstract base type for qualityParameter and attachment container</xsd:documentation>
		</xsd:annotation>
		<xsd:choice maxOccurs="unbounded">
			<xsd:sequence>
				<xsd:element name="metaDataParameters" minOccurs="0" maxOccurs="unbounded">
					<xsd:annotation>
						<xsd:documentation>Meta data about the quality parameters, e.g. description of tool(s) the quality parameters were created with, version of the tool(s), creation data, source files the quality parameters were extracted from, etc.

Also file provenance of the analysis files this file keeps the quality metrics of ... 

needs more cv like type of analysis, ???</xsd:documentation>
					</xsd:annotation>
					<xsd:complexType>
						<xsd:complexContent>
							<xsd:extension base="MetaDataType">
								<xsd:sequence>
									<xsd:element name="InputFiles" type="InputFilesType"/>
									<xsd:group ref="ParamGroup"/>
								</xsd:sequence>
							</xsd:extension>
						</xsd:complexContent>
					</xsd:complexType>
				</xsd:element>
			</xsd:sequence>
			<xsd:sequence>
				<xsd:element name="qualityMetric" type="QualityMetricType" maxOccurs="unbounded">
					<xsd:annotation>
						<xsd:documentation>Describes the @value of a certain quality parameter by reference to a CVType (and UnitCvType)</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
			</xsd:sequence>
		</xsd:choice>
	</xsd:complexType>

	<xsd:complexType name="IdentificationFileType">
		<xsd:annotation>
			<xsd:documentation>A single identification file associated with this analysis.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="ExternalDataType">
				<xsd:sequence>
					<xsd:group ref="ParamGroup" minOccurs="0" maxOccurs="unbounded">
						<xsd:annotation>
							<xsd:documentation>Optional CV or user params for IdentificationFile.</xsd:documentation>
						</xsd:annotation>
					</xsd:group>
				</xsd:sequence>
				<xsd:attribute name="searchDatabase_name" type="xsd:string" use="optional">
					<xsd:annotation>
						<xsd:documentation>Reiterates the question whether all identifications are derived from a database. Should probably though not be optional if this element exists.</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="QuantificationFileType">
		<xsd:annotation>
			<xsd:documentation>A single quantification file associated with this analysis. Do we miss SRM or other transition based quant. methods? Otherwise this type can be externaldatatype...</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="ExternalDataType">
				<xsd:sequence>
					<xsd:group ref="ParamGroup" minOccurs="0" maxOccurs="unbounded">
						<xsd:annotation>
							<xsd:documentation>Optional CV or user params for IdentificationFile.</xsd:documentation>
						</xsd:annotation>
					</xsd:group>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>

	<xsd:complexType name="InputFilesType">
		<xsd:annotation>
			<xsd:documentation>All the raw files, identification files and databases used in the quantitation.</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="RawFile" type="RawFileType" minOccurs="1" maxOccurs="unbounded">
				<xsd:annotation>
					<xsd:documentation>Are there experiments with more than one raw file?
i.g. as QC is all about retraceability, all fundamental info should be kept at the most basic level after the raw anlysis files, no redundancy. raw files should be kept in the run_qc - makes set_qc file dependent on run_qc entries though ...</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="IdentificationFile" type="IdentificationFileType" minOccurs="0"
				maxOccurs="1"/>
			<xsd:element name="QuantificationFile" type="QuantificationFileType" minOccurs="0"
				maxOccurs="1"/>
			<xsd:element name="OtherFile" type="ExternalDataType" minOccurs="0"
				maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="TableType">
		<xsd:sequence>
			<xsd:element name="tableColumnTypes" type="listOfStrings">
				<xsd:annotation>
					<xsd:documentation>Containes either the names or accessions of cvTerms following in that order in each tableRowValues (space separated) </xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="tableRowValues" type="listOfStrings" maxOccurs="unbounded">
				<xsd:annotation>
					<xsd:documentation>Containes the values in the order given in tableColumnTypes (space separated)</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="CVListType">
		<xsd:annotation>
			<xsd:documentation>The list of controlled vocabularies used in the file.</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="cv" type="CVType" maxOccurs="unbounded">
				<xsd:annotation>
					<xsd:documentation>these are describing the controlled vocabularies containing the used parameters</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:simpleType name="listOfStrings">
		<xsd:list itemType="xsd:string"/>
	</xsd:simpleType>
	<xsd:simpleType name="listOfDoubles">
		<xsd:list itemType="xsd:double"/>
	</xsd:simpleType>
	<xsd:simpleType name="listOfDoublesOrNulls">
		<xsd:list itemType="doubleOrNullType"/>
	</xsd:simpleType>
	<xsd:simpleType name="doubleOrNullType">
		<xsd:union memberTypes="xsd:double">
			<xsd:simpleType>
				<xsd:restriction base="xsd:token">
					<xsd:enumeration value="null"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:union>
	</xsd:simpleType>
	<xsd:simpleType name="versionRegex">
		<xsd:restriction base="xsd:string">
			<xsd:pattern value="(1\.1\.\d+)"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:complexType name="CVType">
		<xsd:annotation>
			<xsd:documentation>A source controlled vocabulary from which cvParams will be obtained.</xsd:documentation>
		</xsd:annotation>
		<xsd:attribute name="fullName" type="xsd:string" use="required">
			<xsd:annotation>
				<xsd:documentation>The full name of the CV.</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="version" type="xsd:string">
			<xsd:annotation>
				<xsd:documentation>The version of the CV.</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="uri" type="xsd:anyURI" use="required">
			<xsd:annotation>
				<xsd:documentation>The URI of the source CV.</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="ID" type="xsd:ID" use="required">
			<xsd:annotation>
				<xsd:documentation>The unique identifier of this cv within the document to be referenced by cvParam elements. </xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
	</xsd:complexType>
	<xsd:complexType name="FileFormatType">
		<xsd:annotation>
			<xsd:documentation>The format of the ExternalData file, for example "tiff" for image files. </xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="cvParam" type="CVParamType">
				<xsd:annotation>
					<xsd:documentation>cvParam capturing file formats</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:group name="ParamGroup">
		<xsd:annotation>
			<xsd:documentation>A choice of either a cvParam or userParam.</xsd:documentation>
		</xsd:annotation>
		<xsd:choice>
			<xsd:element name="cvParam" type="CVParamType"/>
			<xsd:element name="userParam" type="UserParamType"/>
		</xsd:choice>
	</xsd:group>
	<xsd:complexType name="UserParamType">
		<xsd:annotation>
			<xsd:documentation>A single user-defined parameter.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="AbstractParamType">
				<xsd:attribute name="type" type="xsd:string" use="optional">
					<xsd:annotation>
						<xsd:documentation>The datatype of the parameter, where appropriate (e.g.: xsd:float).</xsd:documentation>
					</xsd:annotation>
				</xsd:attribute>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
</xsd:schema>
